name: Go

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.22", "1.23", "1.24"]
      fail-fast: false
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go }}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install sqlite
          go env -w CGO_CFLAGS="$(go env CGO_CFLAGS) -I/opt/homebrew/opt/openssl/include"
          go env -w CGO_LDFLAGS="$(go env CGO_LDFLAGS) -L/opt/homebrew/opt/openssl/lib"

      - uses: actions/checkout@v4

      - name: "Tags: default"
        run: go test -race -v -coverprofile=coverage.out -tags ""

      - name: "Tags: libsqlite3"
        run: go test -race -v -coverprofile=coverage.out -tags "libsqlite3"

      - name: "Tags: vacuum"
        run: go test -race -v -coverprofile=coverage.out -tags "sqlite_vacuum_full"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-windows:
    name: Test for Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        go: ["1.22", "1.23", "1.24"]
      fail-fast: false
    env:
      OS: windows-latest
      GO: ${{ matrix.go }}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-sqlite3
          msystem: MINGW64
          path-type: inherit

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Add $GOPATH/bin to $PATH
        run: |
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
        shell: msys2 {0}

      - uses: actions/checkout@v4

      - name: "Tags: default"
        run: go build -race -v -tags ""
        shell: msys2 {0}

      - name: "Tags: libsqlite3"
        run: go build -race -v -tags "libsqlite3"
        shell: msys2 {0}

      - name: "Tags: full"
        run: |
          echo 'skip this test'
          echo go build -race -v -tags "sqlite_allow_uri_authority sqlite_app_armor sqlite_column_metadata sqlite_foreign_keys sqlite_fts5 sqlite_icu sqlite_introspect sqlite_json sqlite_math_functions sqlite_preupdate_hook sqlite_secure_delete sqlite_see sqlite_stat4 sqlite_trace sqlite_unlock_notify sqlite_userauth sqlite_vacuum_incr sqlite_vtable"
        shell: msys2 {0}

      - name: "Tags: vacuum"
        run: go build -race -v -tags "sqlite_vacuum_full"
        shell: msys2 {0}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
